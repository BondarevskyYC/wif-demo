name: CI

permissions:
  id-token: write # Требуется для запроса JWT-токена

on:
  # Запускает выполнение сценария при пуш или пул-реквесте в ветке "main"
  push:
    branches: [ "main", "stage" ]
  pull_request:
    branches: [ "main" ]

  # Позволяет запустить сценарий вручную во вкладке Actions
  workflow_dispatch:

jobs:
  job:
    runs-on: ubuntu-latest
    steps:
    
    # Получить токен рабочего процесса (первый способ через системные переменные окружения $ACTIONS_ID_TOKEN_REQUEST_TOKEN $ACTIONS_ID_TOKEN_REQUEST_URL)
    - name: Get ID Token
      id: get_token
      run: |
        echo -e "\033[0;32m==>\033[0m Requesting GitHub OIDC token from '$ACTIONS_ID_TOKEN_REQUEST_URL'"
        echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN"
        IDTOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" $ACTIONS_ID_TOKEN_REQUEST_URL  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
        jwtd() {
            if [[ -x $(command -v jq) ]]; then
                jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
            fi
        }
        jwtd $IDTOKEN
        echo "idToken=${IDTOKEN}" >> $GITHUB_OUTPUT    
        echo "CC_TOKEN=$IDTOKEN" >> "$GITHUB_ENV"

  
    
    # Обменять токен рабочего процесса на IAM-токен сервисного аккаунта в Yandex Cloud
    - name: GetIAMToken
      run: |
        echo -e "\033[0;32m==>\033[0m Token get from env"
        echo "CC_TOKEN=${{ env.CC_TOKEN }}"
        SA_ID="aje3uo9tr37mn2g83nkh"
        IAMTOKEN=$(curl -sH "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ietf:params:oauth:grant-type:token-exchange&requested_token_type=urn:ietf:params:oauth:token-type:access_token&audience=$SA_ID&subject_token=${{env.CC_TOKEN}}&subject_token_type=urn:ietf:params:oauth:token-type:id_token" -X POST https://auth.yandex.cloud/oauth/token | jq -r '.access_token')
        echo "IAMToken=${IAMTOKEN}" >> $GITHUB_OUTPUT
      id: IAMtoken
    
    # Запросить значение секрета через API, используя IAM-токен в Yandex Cloud
    - name: GetLockboxPayload
      run: |
        SECRET_ID="e6qfjs8d6tag83ovql27"
        SECRET_DATA=$(curl -sH "Authorization: Bearer ${{steps.IAMtoken.outputs.IAMTOKEN}}" https://payload.lockbox.api.cloud.yandex.net/lockbox/v1/secrets/$SECRET_ID/payload)
        echo "SECRET_DATA="
        echo "${SECRET_DATA}"
      id: getlockboxpayload

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        # скачиваем
        curl -f -s -LO https://storage.yandexcloud.net/yandexcloud-yc/install.sh
        sudo bash install.sh -i /usr/local/yandex-cloud -n
        sudo ln -sf /usr/local/yandex-cloud/bin/yc /usr/local/bin/yc
        # конфигурируем
        echo "config yc cli..."
        export YC_TOKEN=${{steps.IAMtoken.outputs.IAMTOKEN}}
        echo "YC_TOKEN=$YC_TOKEN"
        yc config profile create sa-profile
        # выводим список serverless
        yc serverless container list
        # создаем serverless
        yc serverless container revision deploy  --container-name bondarevsky --image cr.yandex/crprpai76362s82qgl49/bondarevsky:latest --service-account-id ajeqhpquhj15a0ngjfuo
